import Step2 from "./Step2";
import Swal from "sweetalert2";

export default function Calculate() {
  const handleSubmit = (e) => {
    e.preventDefault();

    // ‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å submi

    let timerInterval;
    Swal.fire({
      title: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...",
      html: "‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà",
      timer: 20000,
      timerProgressBar: true,
      didOpen: () => {
        Swal.showLoading();
        const timer = Swal.getPopup().querySelector("b");
        timerInterval = setInterval(() => {
          timer.textContent = `${Swal.getTimerLeft()}`;
        }, 1000); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å 100 ‡πÄ‡∏õ‡πá‡∏ô 1000 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      },
      willClose: () => {
        clearInterval(timerInterval);
      },
      showCancelButton: true, // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
      confirmButtonText: 'OK',
      cancelButtonText: 'Cancel',
    }).then((result) => {
      if (result.isConfirmed) {
        // ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î OK
        alert('‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î OK');
      } else if (result.dismiss === Swal.DismissReason.timer) {
        // ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠ SweetAlert ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
    
        // ‡πÅ‡∏™‡∏î‡∏á Alert ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° Confirm
        Swal.fire({
          title: '‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          text: '‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Console',
          icon: 'success',
          showCancelButton: false,
          confirmButtonText: '<a href="/Result">OK</a>',
          allowOutsideClick: false,
        }).then((result) => {
          // ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î Confirm
          if (result.isConfirmed) {
            // ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            //alert('‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î Confirm');
          }
        });
      } else {
        // ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Cancel ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
        console.log("I was closed by other reason");
      }
    });
  };

  return (
    <div>
      <Step2 />
      <div className="my-10 p-10 bg-white border border-gray-400 w-2/6 m-auto rounded-md">
        <form onSubmit={handleSubmit}>
          Population Size :
          <input className="my-3 ml-5" type="number" name="POPULATION_SIZE" />
          <br />
          Max Generation :
          <input className="my-3 ml-5" type="number" name="MAX_GENERATIONS" />
          <br />
          Mutation Rate :
          <input className="my-3 ml-7" type="number" name="MUTATION_RATE" />
          <br />
          <input
            type="submit"
            value="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì üî£"
            className="text-white bg-green-600 rounded-md p-3 ml-3 mr-20 mt-8"
          />
        </form>
      </div>
    </div>
  );
}
